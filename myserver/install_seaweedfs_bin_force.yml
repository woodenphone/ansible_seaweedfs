## install_certstrap_bin_force.yml
## Install weed binary, no checking for conditionals.
## Author Ctrl-S
---
- name: "Prep dir(s)"
  ansible.builtin.file:
    state: 'directory'
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 'u=rwx,g=rwx,o=rx'
    path: "{{ weed_install_work_dir }}"

- name: 'weed - bin - download'
  ansible.builtin.get_url: ## Download latest binary release.
    url: "https://github.com/chrislusf/seaweedfs/releases/download/{{ weed_latest_release }}/linux_amd64_large_disk.tar.gz"
    dest: "{{ weed_install_work_dir }}/linux_amd64_large_disk-v{{ weed_latest_release }}.tar.gz"
    # timeout: 300
    force: no
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 'u=rw,g=rw,o=r'

- name: 'weed - bin - extract'
  ansible.builtin.unarchive:
    remote_src: yes
    src: "{{ weed_install_work_dir }}/linux_amd64_large_disk-v{{ weed_latest_release }}.tar.gz"
    dest: "{{ weed_install_work_dir }}/"
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'weed - bin - rename pt1 (copy) '
  ansible.builtin.copy:
    remote_src: yes
    src: "{{ weed_install_work_dir }}/weed"
    dest: "{{ weed_install_work_dir }}/weed-linux_amd64_large_disk-v{{ weed_latest_release }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 'u=rwx,g=rwx,o=rx'
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'weed - bin - rename pt2 (delete origin)'
  ansible.builtin.file:
    path: "{{ weed_install_work_dir }}/weed"
    state: absent

- name: 'weed - bin - copy to systemwide'
  ansible.builtin.copy:
    remote_src: yes
    src: "{{ weed_install_work_dir }}/weed-linux_amd64_large_disk-v{{ weed_latest_release }}"
    dest: "/usr/local/bin/weed-linux_amd64_large_disk-v{{ weed_latest_release }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 'u=rx,g=rx,o=rx'
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'weed - bin - symlink'
  ansible.builtin.file:
    dest: "/usr/local/bin/weed"
    src: "/usr/local/bin/weed-linux_amd64_large_disk-v{{ weed_latest_release }}"
    state: link
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'weed - bin - testrun.1'
  shell: '/usr/local/bin/weed version'
  register: weed_install_test_cmd_result
- name: 'weed - bin - testrun.2'
  ansible.builtin.debug:
    var: weed_install_test_cmd_result
- name: 'weed - bin - testrun.3'
  assert:
    that: "'{{ weed_latest_release }}' in weed_install_test_cmd_result.stdout"
  ignore_errors: "{{ ansible_check_mode }}" # Will fail if command did not run for check mode.
